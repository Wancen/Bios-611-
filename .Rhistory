n<-as.tibble(n/359)
n<-table(midt$birth_month)/359
n<-as.tibble(n)
g_proportion<-as.tibble(g_proportion)
par(mfcol=c(1,2))
barplot(g_proportion$n, col="gray",xlab="Randomized month",main="Barplot of randomized month",names.arg = g_proportion$Var1)
barplot(n$n,col="gray",xlab="Birth month", main="Barplot of Birth month",names.arg = n$Var1)
boxplot(g$n,n$n,ylab="Count",names=c("Randomized","Birth"),main="Boxplot of month")
n<-table(midt$birth_month)/359
n<-as.tibble(n)
g_proportion<-as.tibble(g_proportion)
par(mfcol=c(1,2))
barplot(g_proportion$n, col="gray",xlab="Randomized month",main="Barplot of randomized month",names.arg = g_proportion$Var1,ylim=c(1,0.14))
barplot(n$n,col="gray",xlab="Birth month", main="Barplot of Birth month",names.arg = n$Var1)
boxplot(g$n,n$n,ylab="Count",names=c("Randomized","Birth"),main="Boxplot of month")
n<-table(midt$birth_month)/359
n<-as.tibble(n)
g_proportion<-as.tibble(g_proportion)
par(mfcol=c(1,2))
barplot(g_proportion$n, col="gray",xlab="Randomized month",main="Barplot of randomized month",names.arg = g_proportion$Var1,ylim=c(0,0.14))
barplot(n$n,col="gray",xlab="Birth month", main="Barplot of Birth month",names.arg = n$Var1)
boxplot(g$n,n$n,ylab="Count",names=c("Randomized","Birth"),main="Boxplot of month")
n<-table(midt$birth_month)/359
n<-as.tibble(n)
g_proportion<-as.tibble(g_proportion)
par(mfcol=c(1,2))
barplot(g_proportion$n, col="gray",xlab="Randomized month",main="Barplot of randomized month",names.arg = g_proportion$Var1,ylim=c(0,0.12))
barplot(n$n,col="gray",xlab="Birth month", main="Barplot of Birth month",names.arg = n$Var1,ylim=c(0,0.12))
boxplot(g$n,n$n,ylab="Count",names=c("Randomized","Birth"),main="Boxplot of month")
n<-table(midt$birth_month)/359
n<-as.tibble(n)
g_proportion<-as.tibble(g_proportion)
par(mfcol=c(1,2))
barplot(g_proportion$n, col="gray",xlab="Randomized month",main="Barplot of randomized month",names.arg = g_proportion$Var1,ylim=c(0,0.12))
barplot(n$n,col="gray",xlab="Birth month", main="Barplot of Birth month",names.arg = n$Var1,ylim=c(0,0.12))
boxplot(g_proportion$n,n$n,ylab="Count",names=c("Randomized","Birth"),main="Boxplot of month")
barplot(g_proportion$n, col="gray",xlab="Randomized month",las=2,main="Barplot of randomized month",names.arg = g_proportion$Var1,ylim=c(0,0.12))
n<-table(midt$birth_month)/359
n<-as.tibble(n)
g_proportion<-as.tibble(g_proportion)
par(mfcol=c(1,2))
barplot(g_proportion$n, col="gray",xlab="Randomized month",las=2,main="Barplot of randomized month",names.arg = g_proportion$Var1,ylim=c(0,0.12))
barplot(n$n,col="gray",xlab="Birth month", main="Barplot of Birth month",names.arg = n$Var1,ylim=c(0,0.12))
boxplot(g_proportion$n,n$n,names=c("Randomized","Birth"),main="Boxplot of proportion")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
neo_beha<-read_csv("data_neo_beha.csv")
print(kable(neo_beha_ID[,2:4]))
load("D:/Lab/github/gmia/processed_data/.RData")
print(kable(neo_beha_ID[,2:4]))
neo_beha_micro_num<-sum(!is.na(neo_beha$wunifrac.PC.1))
neo_beha_mask_num<-sum(!is.na(neo_beha$MaskSummedScore_FacialFear))
#neo_beha_micro_ID<-vector("character",neo_beha_micro)
neo_beha_micro_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$wunifrac.PC.1)])
neo_beha_mask_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$MaskSummedScore_FacialFear)])
neo_beha_share_ID<-inner_join(neo_beha_micro_ID,neo_beha_mask_ID)
neo_beha_share_num<-nrow(neo_beha_share_ID)
#Obtain number of each variable
neo_beha_num<-c(neo_beha_mask_num, neo_beha_micro_num, neo_beha_share_num)
names(neo_beha_num)<-c("microbiome","mask_task","shared")
print(kable(neo_beha_num,caption="neo microbiome vs mask count"))
df1 = cbind("id"=neo_beha_micro_ID$value,neo_beha_micro_ID)
df2 = cbind("id"=neo_beha_mask_ID$value,neo_beha_mask_ID)
df3 = cbind("id"=neo_beha_share_ID$value,neo_beha_share_ID)
neo_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
colnames(neo_beha_ID)<-c("id","microbiome","mask_task","shared")
#list subject
print(kable(neo_beha_ID[,2:4],caption="neo microbiome vs mask SUBID"))
neo_beha_micro_num<-sum(!is.na(neo_beha$wunifrac.PC.1))
neo_beha_mask_num<-sum(!is.na(neo_beha$MaskSummedScore_FacialFear))
#neo_beha_micro_ID<-vector("character",neo_beha_micro)
neo_beha_micro_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$wunifrac.PC.1)])
neo_beha_mask_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$MaskSummedScore_FacialFear)])
neo_beha_share_ID<-inner_join(neo_beha_micro_ID,neo_beha_mask_ID)
neo_beha_share_num<-nrow(neo_beha_share_ID)
#Obtain number of each variable
neo_beha_num<-c(neo_beha_mask_num, neo_beha_micro_num, neo_beha_share_num)
names(neo_beha_num)<-c("microbiome","mask_task","shared")
print(kable(neo_beha_num,caption="neo microbiome vs mask count"))
df1 = cbind("id"=neo_beha_micro_ID$value,neo_beha_micro_ID)
df2 = cbind("id"=neo_beha_mask_ID$value,neo_beha_mask_ID)
df3 = cbind("id"=neo_beha_share_ID$value,neo_beha_share_ID)
neo_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
colnames(neo_beha_ID)<-c("id","microbiome","mask_task","shared")
#list subject
print(kable(neo_beha_ID[,2:4],caption="neo microbiome vs mask SUBID"))
neo_beha_micro_num<-sum(!is.na(neo_beha$wunifrac.PC.1))
neo_beha_mask_num<-sum(!is.na(neo_beha$MaskSummedScore_FacialFear))
#neo_beha_micro_ID<-vector("character",neo_beha_micro)
neo_beha_micro_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$wunifrac.PC.1)])
neo_beha_mask_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$MaskSummedScore_FacialFear)])
neo_beha_share_ID<-inner_join(neo_beha_micro_ID,neo_beha_mask_ID,by = "value")
neo_beha_share_num<-nrow(neo_beha_share_ID)
#Obtain number of each variable
neo_beha_num<-c(neo_beha_mask_num, neo_beha_micro_num, neo_beha_share_num)
names(neo_beha_num)<-c("microbiome","mask_task","shared")
print(kable(neo_beha_num,caption="neo microbiome vs mask count"))
df1 = cbind("id"=neo_beha_micro_ID$value,neo_beha_micro_ID)
df2 = cbind("id"=neo_beha_mask_ID$value,neo_beha_mask_ID)
df3 = cbind("id"=neo_beha_share_ID$value,neo_beha_share_ID)
neo_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
colnames(neo_beha_ID)<-c("id","microbiome","mask_task","shared")
#list subject
print(kable(neo_beha_ID[,2:4],caption="neo microbiome vs mask SUBID"))
print(kable(neo_beha_ID[,2:4],caption=paste(edataName,' vs ',cdataName,sep='')))
neo_beha_micro_num<-sum(!is.na(neo_beha$wunifrac.PC.1))
neo_beha_mask_num<-sum(!is.na(neo_beha$MaskSummedScore_FacialFear))
#neo_beha_micro_ID<-vector("character",neo_beha_micro)
neo_beha_micro_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$wunifrac.PC.1)])
neo_beha_mask_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$MaskSummedScore_FacialFear)])
neo_beha_share_ID<-inner_join(neo_beha_micro_ID,neo_beha_mask_ID,by = "value")
neo_beha_share_num<-nrow(neo_beha_share_ID)
#Obtain number of each variable
neo_beha_num<-c(neo_beha_mask_num, neo_beha_micro_num, neo_beha_share_num)
names(neo_beha_num)<-c("microbiome","mask_task","shared")
print(kable(neo_beha_num,caption="neo microbiome vs mask count"))
df1 = cbind("id"=neo_beha_micro_ID$value,neo_beha_micro_ID)
df2 = cbind("id"=neo_beha_mask_ID$value,neo_beha_mask_ID)
df3 = cbind("id"=neo_beha_share_ID$value,neo_beha_share_ID)
neo_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
colnames(neo_beha_ID)<-c("id","microbiome","mask_task","shared")
#list subject
print(kable(neo_beha_ID[,2:4],caption="neo microbiome vs mask subID"))
neo_beha_ID[is.na(neo_beha_ID)] <- '.'
neo_beha_micro_num<-sum(!is.na(neo_beha$wunifrac.PC.1))
neo_beha_mask_num<-sum(!is.na(neo_beha$MaskSummedScore_FacialFear))
#neo_beha_micro_ID<-vector("character",neo_beha_micro)
neo_beha_micro_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$wunifrac.PC.1)])
neo_beha_mask_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$MaskSummedScore_FacialFear)])
neo_beha_share_ID<-inner_join(neo_beha_micro_ID,neo_beha_mask_ID,by = "value")
neo_beha_share_num<-nrow(neo_beha_share_ID)
#Obtain number of each variable
neo_beha_num<-c(neo_beha_mask_num, neo_beha_micro_num, neo_beha_share_num)
names(neo_beha_num)<-c("microbiome","mask_task","shared")
print(kable(neo_beha_num,caption="neo microbiome vs mask count"))
df1 = cbind("id"=neo_beha_micro_ID$value,neo_beha_micro_ID)
df2 = cbind("id"=neo_beha_mask_ID$value,neo_beha_mask_ID)
df3 = cbind("id"=neo_beha_share_ID$value,neo_beha_share_ID)
neo_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
neo_beha_ID[is.na(neo_beha_ID)] <- '.'
colnames(neo_beha_ID)<-c("id","microbiome","mask_task","shared")
#list subject
print(kable(neo_beha_ID[,2:4],caption="neo microbiome vs mask subID"))
yr1_beha<-read_csv("data_yr1_beha.csv")
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count"))
df1 = cbind("id"=yr1_beha_micro_ID$value,yr1_beha_micro_ID)
df2 = cbind("id"=yr1_beha_mask_ID$value,yr1_beha_mask_ID)
df3 = cbind("id"=yr1_beha_share_ID$value,yr1_beha_share_ID)
yr1_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
yr1_beha_ID[is.na(yr1_beha_ID)] <- '.'
colnames(yr1_beha_ID)<-c("id","microbiome","mask_task","shared")
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID"))
?kable
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count"))
df1 = cbind("id"=yr1_beha_micro_ID$value,yr1_beha_micro_ID)
df2 = cbind("id"=yr1_beha_mask_ID$value,yr1_beha_mask_ID)
df3 = cbind("id"=yr1_beha_share_ID$value,yr1_beha_share_ID)
yr1_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
yr1_beha_ID[is.na(yr1_beha_ID)] <- '.'
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared")))
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
#names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count",col.names = c("microbiome","mask_task","shared")))
yr1_beha_num
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
yr1_beha_num
kable(yr1_beha_num,caption="yr1 microbiome vs mask count")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count",options(knitr.kable.NA = '')))
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count",knitr.kable.NA = ''))
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),knitr.kable.NA = ''))
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count",knitr.kable.NA = ''))
df1 = cbind("id"=yr1_beha_micro_ID$value,yr1_beha_micro_ID)
df2 = cbind("id"=yr1_beha_mask_ID$value,yr1_beha_mask_ID)
df3 = cbind("id"=yr1_beha_share_ID$value,yr1_beha_share_ID)
yr1_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
#yr1_beha_ID[is.na(yr1_beha_ID)] <- '.'
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),knitr.kable.NA = ''))
#Get number of used observation in microbiome variable
neo_beha_micro_num<-sum(!is.na(neo_beha$wunifrac.PC.1))
#Get number of used observation in mask_task variable
neo_beha_mask_num<-sum(!is.na(neo_beha$MaskSummedScore_FacialFear))
#Get subID from microbiome
neo_beha_micro_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$wunifrac.PC.1)])
#Get subID from mask_task
neo_beha_mask_ID<-as.tibble(neo_beha$SUBID[!is.na(neo_beha$MaskSummedScore_FacialFear)])
#Get subID both used
neo_beha_share_ID<-inner_join(neo_beha_micro_ID,neo_beha_mask_ID,by = "value")
##Get number of used observation in both two variable
neo_beha_share_num<-nrow(neo_beha_share_ID)
#Obtain table of number
neo_beha_num<-c(neo_beha_mask_num, neo_beha_micro_num, neo_beha_share_num)
names(neo_beha_num)<-c("microbiome","mask_task","shared")
print(kable(neo_beha_num,caption="neo microbiome vs mask count"))
#create id as key to merge 3 dataframe
df1 = cbind("id"=neo_beha_micro_ID$value,neo_beha_micro_ID)
df2 = cbind("id"=neo_beha_mask_ID$value,neo_beha_mask_ID)
df3 = cbind("id"=neo_beha_share_ID$value,neo_beha_share_ID)
neo_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
#neo_beha_ID[is.na(neo_beha_ID)] <- '.'
#Obtain table of subjectID
print(kable(neo_beha_ID[,2:4],caption="neo microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),knitr.kable.NA = '.'))
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count"))
df1 = cbind("id"=yr1_beha_micro_ID$value,yr1_beha_micro_ID)
df2 = cbind("id"=yr1_beha_mask_ID$value,yr1_beha_mask_ID)
df3 = cbind("id"=yr1_beha_share_ID$value,yr1_beha_share_ID)
yr1_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),knitr.kable.NA = '.'))
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count"))
df1 = cbind("id"=yr1_beha_micro_ID$value,yr1_beha_micro_ID)
df2 = cbind("id"=yr1_beha_mask_ID$value,yr1_beha_mask_ID)
df3 = cbind("id"=yr1_beha_share_ID$value,yr1_beha_share_ID)
yr1_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),knitr.kable.NA ="."))
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),knitr.kable.NA =c(".")))
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared"),options(knitr.kable.NA =".")))
yr1_beha_micro_num<-sum(!is.na(yr1_beha$wunifrac.PC.1))
yr1_beha_mask_num<-sum(!is.na(yr1_beha$MaskSummedScore_FacialFear))
yr1_beha_micro_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$wunifrac.PC.1)])
yr1_beha_mask_ID<-as.tibble(yr1_beha$SUBID[!is.na(yr1_beha$MaskSummedScore_FacialFear)])
yr1_beha_share_ID<-inner_join(yr1_beha_micro_ID,yr1_beha_mask_ID,by = "value")
yr1_beha_share_num<-nrow(yr1_beha_share_ID)
yr1_beha_num<-c(yr1_beha_mask_num, yr1_beha_micro_num, yr1_beha_share_num)
names(yr1_beha_num)<-c("microbiome","mask_task","shared")
print(kable(yr1_beha_num,caption="yr1 microbiome vs mask count"))
df1 = cbind("id"=yr1_beha_micro_ID$value,yr1_beha_micro_ID)
df2 = cbind("id"=yr1_beha_mask_ID$value,yr1_beha_mask_ID)
df3 = cbind("id"=yr1_beha_share_ID$value,yr1_beha_share_ID)
yr1_beha_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
yr1_beha_ID[is.na(yr1_beha_ID)] <- '.'
print(kable(yr1_beha_ID[,2:4],caption="yr1 microbiome vs mask subID",col.names = c("microbiome","mask_task","shared")))
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read_csv)
myfiles
neo_beha_micro_num<-sum(!is.na(myfiles[[1]]$wunifrac.PC.1))
sum(!is.na(myfiles[[1]]$wunifrac.PC.1))
?paste
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
neo_beha<-read_csv("data_neo_beha.csv")
yr1_beha<-read_csv("data_yr1_beha.csv")
#Read all csv into a list myfiles and call them by using myfiles[[]]
#temp = list.files(pattern="*.csv")
#myfiles = lapply(temp, read_csv)
a<-c("neo","yr1")
print(kable(neo_beha_ID[,2:4],caption=paste(a,"microbiome vs mask subID"),col.names = c("microbiome","mask_task","shared")))
b<-c("MaskSummedScore_FacialFear","neo.WM")
a<-c("neo","yr1")
b<-c("MaskSummedScore_FacialFear","neo.WM")
as.tibble(neo_beha$SUBID[!is.na(myfiles[[1]]$b[1])])
b
b[1]
neo_beha$SUBID[!is.na(myfiles[[1]]$paste(b[1]))]
neo_beha$(b[1])
neo_beha$SUBID[!is.na(myfiles[[1]][b[1]])]
myfiles[[2]]
myfiles[[5]]]
seq_along(myfiles)
myfiles[[5]]$MaskIntensityFacialFear..0.3.
!is.na(myfiles[[2]][b[2]])
!is.na(myfiles[[2]][b[2]])
!is.na(myfiles[[2]][b[1]])
!is.na(myfiles[[2]][b[3]])
sum(!is.na(myfiles[[2]][b[2]]))
b<-c("MaskSummedScore_FacialFear","MaskIntensityFacialFear..0.3.","neo.WM","MaskMaxIntensity_FacialFear","MaskIntensityFacialFear..0.3.","yr1.WM","L1.Cellular.Processes","L1.Cellular.Processes","IBQr_fear","IBQr_fear","IBQr_fear","IBQr_fear","MAGE","MAGE","MAGE","MAGE")
sum(!is.na(myfiles[[2]][b[2]]))
sum(unique(!is.na(myfiles[[2]][b[2]])))
sum(!is.na(unique(myfiles[[2]][b[2]])))
sum(!is.na(unique(myfiles[[2]]$wunifrac.PC.1)))
sum(!is.na(unique(myfiles[[2]][b[2]])))
sum(!is.na(unique(myfiles[[1]][b[1]])))
!is.na(unique(myfiles[[1]][b[1]]))
unique(myfiles[[1]][b[1]])
myfiles[[1]][b[1]]
myfiles[[2]][b[2]]
unique(myfiles[[1]]$SUBID[!is.na(myfiles[[1]]$wunifrac.PC.1))
unique(myfiles[[1]]$SUBID[!is.na(myfiles[[1]]$wunifrac.PC.1))
unique(myfiles[[1]]$SUBID)[!is.na(myfiles[[1]]$wunifrac.PC.1)
?unique.data.frame
unique.array(myfiles[[1]]$SUBID[!is.na(myfiles[[1]]$wunifrac.PC.1))
unique.array(myfiles[[1]]$SUBID[!is.na(myfiles[[1]]$wunifrac.PC.1)])
unique(myfiles[[1]]$SUBID[!is.na(myfiles[[1]]$wunifrac.PC.1)])
neo_strange<-read_csv("diversity_strange_neo.csv")
yr1_strange<-read_csv("diversity_strange_yr1.csv")
yr1_strange_micro_num<-sum(!is.na(yr1_strange$wunifrac.PC.1))
yr1_strange_corrspond_num<-sum(!is.na(yr1_strange$Summed))
yr1_strange_micro_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$wunifrac.PC.1)])
yr1_strange_strange_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$Summed)])
yr1_strange_share_ID<-inner_join(yr1_strange_micro_ID,yr1_strange_strange_ID,by = "value")
yr1_strange_share_num<-nrow(yr1_strange_share_ID)
yr1_strange_num<-c(yr1_strange_strange_num, yr1_strange_micro_num, yr1_strange_share_num)
yr1_strange_micro_num<-sum(!is.na(yr1_strange$wunifrac.PC.1))
yr1_strange_summ_num<-sum(!is.na(yr1_strange$Summed))
yr1_strange_micro_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$wunifrac.PC.1)])
yr1_strange_summ_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$Summed)])
yr1_strange_share_ID<-inner_join(yr1_strange_micro_ID,yr1_strange_strange_ID,by = "value")
yr1_strange_share_num<-nrow(yr1_strange_share_ID)
yr1_strange_num<-c(yr1_strange_micro_num, yr1_strange_summ__num, yr1_strange_share_num)
yr1_strange_summ_num<-sum(!is.na(yr1_strange$Summed))
yr1_strange_micro_num<-sum(!is.na(yr1_strange$wunifrac.PC.1))
yr1_strange_summ_num<-sum(!is.na(yr1_strange$Summed))
yr1_strange_micro_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$wunifrac.PC.1)])
yr1_strange_summ_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$Summed)])
yr1_strange_share_ID<-inner_join(yr1_strange_micro_ID,yr1_strange_strange_ID,by = "value")
yr1_strange_share_num<-nrow(yr1_strange_share_ID)
yr1_strange_num<-c(yr1_strange_micro_num, yr1_strange_summ__num, yr1_strange_share_num)
yr1_strange_micro_num<-sum(!is.na(yr1_strange$wunifrac.PC.1))
yr1_strange_summ_num<-sum(!is.na(yr1_strange$Summed))
yr1_strange_micro_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$wunifrac.PC.1)])
yr1_strange_summ_ID<-as.tibble(yr1_strange$SUBID[!is.na(yr1_strange$Summed)])
yr1_strange_share_ID<-inner_join(yr1_strange_micro_ID,yr1_strange_strange_ID,by = "value")
yr1_strange_share_num<-nrow(yr1_strange_share_ID)
yr1_strange_num<-c(yr1_strange_micro_num, yr1_strange_summ_num, yr1_strange_share_num)
names(yr1_strange_num)<-c("microbiome","strange_task","shared")
print(kable(yr1_strange_num,caption="yr1 microbiome vs strange situation count"))
df1 = cbind("id"=yr1_strange_micro_ID$value,yr1_strange_micro_ID)
df2 = cbind("id"=yr1_strange_summ_ID$value,yr1_strange_summ_ID)
df3 = cbind("id"=yr1_strange_share_ID$value,yr1_strange_share_ID)
yr1_strange_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
yr1_strange_ID[is.na(yr1_strange_ID)] <- '.'
print(kable(yr1_strange_ID[,2:4],caption="yr1 microbiome vs strange situation subID",col.names = c("microbiome","strange_task","shared")))
neo_strange_micro_num<-sum(!is.na(neo_strange$wunifrac.PC.1))
neo_strange_summ_num<-sum(!is.na(neo_strange$Summed))
neo_strange_micro_ID<-as.tibble(neo_strange$SUBID[!is.na(neo_strange$wunifrac.PC.1)])
neo_strange_summ_ID<-as.tibble(neo_strange$SUBID[!is.na(neo_strange$Summed)])
neo_strange_share_ID<-inner_join(neo_strange_micro_ID,neo_strange_strange_ID,by = "value")
neo_strange_micro_num<-sum(!is.na(neo_strange$wunifrac.PC.1))
neo_strange_summ_num<-sum(!is.na(neo_strange$Summed))
neo_strange_micro_ID<-as.tibble(neo_strange$SUBID[!is.na(neo_strange$wunifrac.PC.1)])
neo_strange_summ_ID<-as.tibble(neo_strange$SUBID[!is.na(neo_strange$Summed)])
neo_strange_share_ID<-inner_join(neo_strange_micro_ID,neo_strange_summ_ID,by = "value")
neo_strange_share_num<-nrow(neo_strange_share_ID)
neo_strange_num<-c(neo_strange_micro_num, neo_strange_summ_num, neo_strange_share_num)
names(neo_strange_num)<-c("microbiome","strange_task","shared")
print(kable(neo_strange_num,caption="neo microbiome vs strange situation count"))
df1 = cbind("id"=neo_strange_micro_ID$value,neo_strange_micro_ID)
df2 = cbind("id"=neo_strange_summ_ID$value,neo_strange_summ_ID)
df3 = cbind("id"=neo_strange_share_ID$value,neo_strange_share_ID)
neo_strange_ID<-Reduce(function(x,y) merge(x, y, by = "id", all.x = TRUE, all.y = TRUE),
list(df1, df2, df3))
neo_strange_ID[is.na(neo_strange_ID)] <- '.'
print(kable(neo_strange_ID[,2:4],caption="neo microbiome vs strange situation subID",col.names = c("microbiome","strange_task","shared")))
mostwords<-mostword %>%
group_by(collaborator, n,title, word) %>%
summarise(nword = n()) %>%
mutate(rank = row_number(-nword)) %>%
filter(nword>5 & rank<=3) %>% #We assume that key words of each abstract should be mentioned more than 5 times
arrange(collaborator,title, desc(nword)) %>%
group_by(collaborator,n) %>%
mutate(rank = row_number(-nword)) %>%
filter(rank<=15)
options(encoding="UTF-8")
#Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
args = commandArgs(trailingOnly = TRUE)
Summary<-read.csv(args[1])
library(dplyr)
library(tidytext)
#Count the collaboration times for each collaborator
Ordersum<-Summary %>%
group_by(collaborator) %>%
tally() %>%
arrange(desc(n))
#Get the top 10 institutation and join with Summary to get information of title and abstract
top10<-head(Ordersum,10)
top10summary<-inner_join(top10,Summary)
#First, get the abundant, differentiating words for each abstract
#By doing so, overall key words are more comprehensive and representative after merge for collaborator
mostword = top10summary %>%
unnest_tokens(word, abstract) %>%
anti_join(stop_words,by="word")
mostword<-mostword[- grep("patients|clinical|patient", mostword$word),]
mostwords<-mostword %>%
group_by(collaborator, n,title, word) %>%
summarise(nword = n()) %>%
mutate(rank = row_number(-nword)) %>%
filter(nword>5 & rank<=3) %>% #We assume that key words of each abstract should be mentioned more than 5 times
arrange(collaborator,title, desc(nword)) %>%
group_by(collaborator,n) %>%
mutate(rank = row_number(-nword)) %>%
filter(rank<=15)
options(encoding="UTF-8")
Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
args = commandArgs(trailingOnly = TRUE)
#Summary<-read.csv(args[1])
library(dplyr)
library(tidytext)
#Count the collaboration times for each collaborator
Ordersum<-Summary %>%
group_by(collaborator) %>%
tally() %>%
arrange(desc(n))
#Get the top 10 institutation and join with Summary to get information of title and abstract
top10<-head(Ordersum,10)
top10summary<-inner_join(top10,Summary)
#First, get the abundant, differentiating words for each abstract
#By doing so, overall key words are more comprehensive and representative after merge for collaborator
mostword = top10summary %>%
unnest_tokens(word, abstract) %>%
anti_join(stop_words,by="word")
mostword<-mostword[- grep("patients|clinical|patient", mostword$word),]
mostwords<-mostword %>%
group_by(collaborator, n,title, word) %>%
summarise(nword = n()) %>%
mutate(rank = row_number(-nword)) %>%
filter(nword>5 & rank<=3) %>% #We assume that key words of each abstract should be mentioned more than 5 times
arrange(collaborator,title, desc(nword)) %>%
group_by(collaborator,n) %>%
mutate(rank = row_number(-nword)) %>%
filter(rank<=15)
options(encoding="UTF-8")
Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
library(dplyr)
library(tidytext)
#Count the collaboration times for each collaborator
Ordersum<-Summary %>%
group_by(collaborator) %>%
tally() %>%
arrange(desc(n))
top10<-head(Ordersum,10)
top10summary<-inner_join(top10,Summary)
top10summary<-inner_join(top10,Summary，by=collaborator)
top10summary<-inner_join(top10,Summary,by="collaborator")
mostword = top10summary %>%
unnest_tokens(word, abstract) %>%
anti_join(stop_words,by="word")
mostword <- top10summary %>%
unnest_tokens(word, abstract) %>%
anti_join(stop_words,by="word")
View(top10summary)
View(Ordersum)
View(Summary)
Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
Summary<-read_csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
library(dplyr)
library(tidytext)
Summary<-read_csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
options(encoding="UTF-8")
Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv")
?read.csv
Summary<-read.csv("D:/Study/611/homework-Wancen/project3/Summary.csv",encoding="UTF-8")
Summary<-read.csv("Summary.csv",encoding="UTF-8")
getwd()
setwd("D:/Study/611/homework-Wancen/project3")
getwd
getwd()
Summary<-read.csv("Summary.csv",encoding="UTF-8")
Summary<-read.csv('Summary.csv',encoding="UTF-8")
Summary<-read.csv('Summary.csv')
?read.csv
View(top10)
library(shiny); runApp('shiny_app.R')
